{"version":3,"sources":["components/Main/VisualElements/PreviewCard.jsx","components/Main/VisualElements/GridView.jsx","components/All-Types-Goods/BrandsPage.jsx","components/All-Types-Goods/BrasPage.jsx","components/Main/VisualElements/TestPreviewCard.jsx","components/Main/VisualElements/TestGridView.jsx","components/All-Types-Goods/KnickersPage.jsx","components/All-Types-Goods/SalePage.jsx","components/All-Types-Goods/ShapewearPage.jsx","data/pagesList.js","components/NavbarMenu.jsx","components/Main/MainPage.jsx","components/ContactsPage/PopoutContactElements.jsx","components/ContactsPage/ContactsPage.jsx","components/Footer-Component.jsx","components/PageContainer.jsx","App.js","routes.jsx","reportWebVitals.js","index.js"],"names":["PreviewCard","closeIcon","header","image","revealIcon","GridView","className","xl","l","BrandsPage","style","BrasPage","TestPreviewCard","product","images","url","description","TestGridView","products","map","id","KnickersPage","MyQuery","gql","useQuery","loading","error","data","categoryProducts","SalePage","ShapewearPage","PagesList","route","menuItem","component","Navbar","propTypes","alignLinks","PropTypes","oneOf","NavbarMenu","brand","href","centerChildren","menuIcon","sidenav","p","to","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","closeOnClick","alignment","autoTrigger","constrainWidth","container","coverTrigger","hover","trigger","MainPage","PopoutContactElements","accordion","popout","expanded","node","ContactsPage","FooterComp","links","PageContainer","Page","App","routes","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cdce7674.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, CardTitle, Icon} from \"react-materialize\";\r\n\r\nconst PreviewCard = () => {\r\n    return (\r\n        <Card\r\n            //Комент - Оправдания не требует\r\n            // actions={[\r\n            //     <a key=\"1\" href=\"#\">This is a Link</a>\r\n            // ]}\r\n            closeIcon={<Icon>close</Icon>}\r\n            header={<CardTitle image=\"https://materializecss.com/images/sample-1.jpg\">Card Title</CardTitle>}\r\n            revealIcon={<Icon>more_vert</Icon>}\r\n        >\r\n            Here is the standard card with an image thumbnail.\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import React from 'react';\r\nimport {Col, Row} from \"react-materialize\";\r\nimport PreviewCard from \"./PreviewCard\";\r\n\r\nconst GridView = () => {\r\n    return (\r\n            <Row>\r\n                <Col\r\n                    className=\"teal red darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default GridView;\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const BrandsPage = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Бренды</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const BrasPage = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Бюстгальтеры</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {Card, CardTitle, Col, Icon} from \"react-materialize\";\r\n\r\nconst TestPreviewCard = ({product}) => {\r\n    return (\r\n            <Card\r\n                //Комент - Оправдания не требует\r\n                // actions={[\r\n                //     <a key=\"1\" href=\"#\">This is a Link</a>\r\n                // ]}\r\n                closeIcon={<Icon>close</Icon>}\r\n                header={<CardTitle image={product.images[0]?.url}></CardTitle>}\r\n                revealIcon={<Icon>more_vert</Icon>}\r\n            >\r\n                {product.description}\r\n            </Card>\r\n    );\r\n};\r\n\r\nexport default TestPreviewCard;\r\n","import React from 'react';\r\nimport {Col, Row} from \"react-materialize\";\r\nimport TestPreviewCard from \"./TestPreviewCard\";\r\n\r\nconst TestGridView = ({products}) => {\r\n    return (\r\n        <Row>\r\n            {products.map((product) => (\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n\r\n                >\r\n                    <TestPreviewCard key={product.id} product={product}/>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TestGridView;\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\nimport {gql, useQuery} from \"@apollo/client\";\r\nimport TestGridView from \"../Main/VisualElements/TestGridView\";\r\n\r\nexport const KnickersPage = () => {\r\n    const MyQuery = gql`\r\n    query MyQuery {\r\n             categoryProducts(categoryName: \"Трусики\") {\r\n                description\r\n                id\r\n                images {\r\n                  url           \r\n                }\r\n            }\r\n    }\r\n`\r\n    const {loading, error, data} = useQuery(MyQuery)\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error</p>\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Трусики</h1>\r\n            <TestGridView products={data.categoryProducts}/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\nimport {gql, useQuery} from \"@apollo/client\";\r\nimport TestGridView from \"../Main/VisualElements/TestGridView\";\r\n\r\nexport const SalePage = () => {\r\n    const MyQuery = gql`\r\n    query MyQuery {\r\n             categoryProducts(categoryName: \"Распродажа\") {\r\n                description\r\n                id\r\n                images {\r\n                  url           \r\n                }\r\n            }\r\n    }\r\n`\r\n    const {loading, error, data} = useQuery(MyQuery)\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error</p>\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Распродажа</h1>\r\n            <TestGridView products={data.categoryProducts}/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\nimport {gql, useQuery} from \"@apollo/client\";\r\nimport TestGridView from \"../Main/VisualElements/TestGridView\";\r\n\r\nexport const ShapewearPage = () => {\r\n    const MyQuery = gql`\r\n    query MyQuery {\r\n             categoryProducts(categoryName: \"Корректирующее\") {\r\n                description\r\n                id\r\n                images {\r\n                  url           \r\n                }\r\n            }\r\n    }\r\n`\r\n    const {loading, error, data} = useQuery(MyQuery)\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error</p>\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Корректирующее белье</h1>\r\n            <TestGridView products={data.categoryProducts}/>\r\n        </div>\r\n    );\r\n};\r\n","import {BrandsPage} from \"../components/All-Types-Goods/BrandsPage\"\r\nimport {BrasPage} from \"../components/All-Types-Goods/BrasPage\"\r\nimport {KnickersPage} from \"../components/All-Types-Goods/KnickersPage\"\r\nimport {SalePage} from \"../components/All-Types-Goods/SalePage\"\r\nimport {ShapewearPage} from \"../components/All-Types-Goods/ShapewearPage\"\r\n\r\nconst PagesList = [\r\n    {route: \"/brands\", menuItem: \"Бренды\", component: <BrandsPage/>},\r\n    {route: \"/bras\", menuItem: \"Бюстгальтеры\", component: <BrasPage/>},\r\n    {route: \"/knickers\", menuItem: \"Трусики\", component: <KnickersPage/>},\r\n    {route: \"/sale\", menuItem: \"Распродажа\", component: <SalePage/>},\r\n    {route: \"/shapewear\", menuItem: \"Корректирующее бельё\", component: <ShapewearPage/>}\r\n]\r\n\r\nexport default PagesList\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Dropdown, Icon, Navbar} from \"react-materialize\"\r\nimport PagesList from \"../data/pagesList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nNavbar.propTypes = {\r\n    ...Navbar.propTypes,\r\n    alignLinks: PropTypes.oneOf(['right sidenav-close']),\r\n}\r\n\r\nexport let NavbarMenu = () => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                brand={<a className=\"brand-logo\" href=\"/\">Logo</a>}\r\n                centerChildren\r\n                id=\"mobile-nav\"\r\n\r\n                menuIcon={<Icon>menu</Icon>}\r\n\r\n                alignLinks='right sidenav-close'\r\n                sidenav={\r\n                    <>\r\n                        {PagesList.map(p => {\r\n                                return (\r\n                                    <li key={p.route}><NavLink to={p.route}>{p.menuItem}</NavLink></li>\r\n                                )\r\n                            }\r\n                        )}\r\n                        <li><NavLink to=\"/contacts\">Контакты</NavLink></li>\r\n                    </>\r\n                }\r\n                options={{\r\n                    draggable: true,\r\n                    edge: 'left',\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 200,\r\n                    preventScrolling: true,\r\n                    closeOnClick: true,\r\n                }}\r\n            >\r\n                <Dropdown\r\n                    id=\"Dropdown_6\"\r\n                    options={{\r\n                        alignment: 'left',\r\n                        autoTrigger: true,\r\n                        closeOnClick: true,\r\n                        constrainWidth: false,\r\n                        container: null,\r\n                        coverTrigger: true,\r\n                        hover: false,\r\n                        inDuration: 150,\r\n                        onCloseEnd: null,\r\n                        onCloseStart: null,\r\n                        onOpenEnd: null,\r\n                        onOpenStart: null,\r\n                        outDuration: 250,\r\n                    }}\r\n\r\n                    trigger={<a href=\"#!\">Все товары{' '}</a>}\r\n                >\r\n                    {PagesList.map(p => {\r\n                            return (\r\n                                <NavLink key={p.route} to={p.route}>{p.menuItem}</NavLink>\r\n                            )\r\n                        }\r\n                    )}\r\n                </Dropdown>\r\n                <NavLink to=\"/contacts\">Контакты</NavLink>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport GridView from \"./VisualElements/GridView\";\r\n\r\nexport const MainPage = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Группы товаров:</h1>\r\n                <GridView/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Collapsible, CollapsibleItem} from \"react-materialize\";\r\n\r\nconst PopoutContactElements = () => {\r\n    return (\r\n        <Collapsible\r\n            accordion\r\n            popout\r\n        >\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Telegram\"\r\n                node=\"div\"\r\n            >\r\n                Контакты Telegram\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Viber\"\r\n                node=\"div\"\r\n            >\r\n                Контакты Viber\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Номер телефона\"\r\n                node=\"div\"\r\n            >\r\n                тел. 000-000-00-00\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Электронная почта\"\r\n                node=\"div\"\r\n            >\r\n                email feya_123456789@gmail.com\r\n            </CollapsibleItem>\r\n        </Collapsible>\r\n    );\r\n};\r\n\r\nexport default PopoutContactElements;\r\n","import React from 'react';\r\nimport PopoutContactElements from \"./PopoutContactElements\";\r\n\r\nexport const ContactsPage = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{\"font-size\": \"calc(24px + 16 * (120vw / 1280))\"}}>Contacts</h1>\r\n            <PopoutContactElements/>\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport {Footer} from \"react-materialize\"\r\n\r\nconst FooterComp = () => {\r\n    return (\r\n        <Footer\r\n            links={\r\n                <ul>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Instagram</a></li>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Facebook</a></li>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Google maps</a></li>\r\n                </ul>}\r\n        >\r\n            <h5 className=\"grey-text text-lighten-4\">\r\n                Ссылки на соц сети:\r\n            </h5>\r\n        </Footer>\r\n    );\r\n};\r\n\r\nexport default FooterComp;\r\n","import React from 'react';\r\n\r\nconst PageContainer = ({Page}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {Page}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContainer;\r\n","import './App.css';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {useRoutes} from \"./routes\";\r\n\r\nfunction App() {\r\n    const routes = useRoutes()\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                {routes}\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {NavbarMenu} from \"./components/NavbarMenu\";\r\nimport {MainPage} from \"./components/Main/MainPage\";\r\nimport {ContactsPage} from \"./components/ContactsPage/ContactsPage\";\r\nimport FooterComp from \"./components/Footer-Component\";\r\nimport PageContainer from \"./components/PageContainer\";\r\nimport PagesList from \"./data/pagesList\";\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <div>\r\n            <NavbarMenu/>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PageContainer Page={<MainPage/>}/>\r\n                </Route>\r\n                <Route path=\"/contacts\" exact>\r\n                    <PageContainer Page={<ContactsPage/>}/>\r\n                </Route>\r\n                {PagesList.map(p => {\r\n                        return (\r\n\r\n                            <Route key={p.route} path={p.route} exact>\r\n                                <PageContainer Page={p.component}/>\r\n                            </Route>\r\n                        )\r\n                    }\r\n                )}\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n            <FooterComp/>\r\n        </div>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"materialize-css\"\r\nimport {ApolloClient, ApolloProvider, InMemoryCache,} from \"@apollo/client\"\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'https://feya-bilyzna.herokuapp.com/api',\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ApolloProvider client={client}>\r\n            <App/>\r\n        </ApolloProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}