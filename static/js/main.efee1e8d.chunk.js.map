{"version":3,"sources":["components/Main/VisualElements/PreviewCard.jsx","components/Main/VisualElements/GridView.jsx","components/All-Types-Goods/BrandsPage.jsx","components/All-Types-Goods/BrasPage.jsx","components/All-Types-Goods/KnickersPage.jsx","components/All-Types-Goods/SalePage.jsx","components/All-Types-Goods/ShapewearPage.jsx","data/All-Types-Goods-Import.js","data/pagesList.js","components/NavbarMenu.jsx","components/Product-Views/ProductListItem.jsx","components/Product-Views/ProductList.jsx","components/Main/MainPage.jsx","components/ContactsPage/PopoutContactElements.jsx","components/ContactsPage/ContactsPage.jsx","components/Footer-Component.jsx","components/PageContainer.jsx","App.js","routes.jsx","reportWebVitals.js","index.js"],"names":["PreviewCard","closeIcon","header","image","revealIcon","GridView","className","xl","l","BrandsPage","BrasPage","KnickersPage","SalePage","ShapewearPage","AllTypesGoodsImport","PagesList","route","menuItem","component","Navbar","propTypes","alignLinks","PropTypes","oneOf","NavbarMenu","brand","href","centerChildren","id","menuIcon","sidenav","map","p","to","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","closeOnClick","alignment","autoTrigger","constrainWidth","container","coverTrigger","hover","trigger","ProductListItem","product","style","maxWidth","margin","name","alt","src","images","url","width","description","ALL_PRODUCTS","gql","ProductList","useQuery","loading","error","data","allProducts","MainPage","display","flexDirection","flexWrap","PopoutContactElements","accordion","popout","expanded","node","ContactsPage","FooterComp","links","PageContainer","Page","App","routes","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.efee1e8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, CardTitle, Icon} from \"react-materialize\";\r\n\r\nconst PreviewCard = () => {\r\n    return (\r\n                <Card\r\n                    //Комент - Оправдания не требует\r\n                    // actions={[\r\n                    //     <a key=\"1\" href=\"#\">This is a Link</a>\r\n                    // ]}\r\n                    closeIcon={<Icon>close</Icon>}\r\n                    header={<CardTitle image=\"https://materializecss.com/images/sample-1.jpg\">Card Title</CardTitle>}\r\n                    revealIcon={<Icon>more_vert</Icon>}\r\n                >\r\n                    Here is the standard card with an image thumbnail.\r\n                </Card>\r\n    );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import React from 'react';\r\nimport {Col, Row} from \"react-materialize\";\r\nimport PreviewCard from \"./PreviewCard\";\r\n\r\nconst GridView = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col\r\n                    className=\"teal red darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n                <Col\r\n                    className=\"teal darken-1\"\r\n                    xl={4}\r\n                    l={6}\r\n                >\r\n                    <PreviewCard/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GridView;\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const BrandsPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Бренды</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const BrasPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Бюстгальтеры</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const KnickersPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Трусики</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const SalePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Распродажа</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport GridView from \"../Main/VisualElements/GridView\";\r\n\r\nexport const ShapewearPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Корректирующее белье</h1>\r\n            <GridView/>\r\n        </div>\r\n    );\r\n};\r\n","import {BrandsPage} from \"../components/All-Types-Goods/BrandsPage\"\r\nimport {BrasPage} from \"../components/All-Types-Goods/BrasPage\"\r\nimport {KnickersPage} from \"../components/All-Types-Goods/KnickersPage\"\r\nimport {SalePage} from \"../components/All-Types-Goods/SalePage\"\r\nimport {ShapewearPage} from \"../components/All-Types-Goods/ShapewearPage\"\r\n\r\nconst AllTypesGoodsImport = [\r\n        <BrandsPage/>,\r\n    <BrasPage/>,\r\n    <KnickersPage/>,\r\n    <SalePage/>,\r\n    <ShapewearPage/>\r\n]\r\n\r\nexport default AllTypesGoodsImport\r\n","import AllTypesGoodsImport from \"./All-Types-Goods-Import\";\r\n\r\nconst components = AllTypesGoodsImport\r\nconst PagesList = [\r\n    {route: \"/brands\", menuItem: \"Бренды\", component: components[0]},\r\n    {route: \"/bras\", menuItem: \"Бюстгальтеры\", component: components[1]},\r\n    {route: \"/knickers\", menuItem: \"Трусики\", component: components[2]},\r\n    {route: \"/sale\", menuItem: \"Распродажа\", component: components[3]},\r\n    {route: \"/shapewear\", menuItem: \"Корректирующее бельё\", component: components[4]}\r\n]\r\n\r\nexport default PagesList\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Dropdown, Icon, Navbar} from \"react-materialize\"\r\nimport PagesList from \"../data/pagesList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nNavbar.propTypes = {\r\n    ...Navbar.propTypes,\r\n    alignLinks: PropTypes.oneOf(['right sidenav-close']),\r\n}\r\n\r\nexport let NavbarMenu = () => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                brand={<a className=\"brand-logo\" href=\"/\">Logo</a>}\r\n                centerChildren\r\n                id=\"mobile-nav\"\r\n\r\n                menuIcon={<Icon>menu</Icon>}\r\n\r\n                alignLinks='right sidenav-close'\r\n                sidenav={\r\n                    <>\r\n                        {PagesList.map(p => {\r\n                                return (\r\n                                    <li key={p.route}><NavLink to={p.route}>{p.menuItem}</NavLink></li>\r\n                                )\r\n                            }\r\n                        )}\r\n                        <li><NavLink to=\"/contacts\">Контакты</NavLink></li>\r\n                    </>\r\n                }\r\n                options={{\r\n                    draggable: true,\r\n                    edge: 'left',\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 200,\r\n                    preventScrolling: true,\r\n                    closeOnClick: true,\r\n                }}\r\n            >\r\n                <Dropdown\r\n                    id=\"Dropdown_6\"\r\n                    options={{\r\n                        alignment: 'left',\r\n                        autoTrigger: true,\r\n                        closeOnClick: true,\r\n                        constrainWidth: false,\r\n                        container: null,\r\n                        coverTrigger: true,\r\n                        hover: false,\r\n                        inDuration: 150,\r\n                        onCloseEnd: null,\r\n                        onCloseStart: null,\r\n                        onOpenEnd: null,\r\n                        onOpenStart: null,\r\n                        outDuration: 250,\r\n                    }}\r\n\r\n                    trigger={<a href=\"#!\">Все товары{' '}</a>}\r\n                >\r\n                    {PagesList.map(p => {\r\n                            return (\r\n                                <NavLink key={p.route} to={p.route}>{p.menuItem}</NavLink>\r\n                            )\r\n                        }\r\n                    )}\r\n                </Dropdown>\r\n                <NavLink to=\"/contacts\">Контакты</NavLink>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n","export const ProductListItem = ({product}) => {\r\n    return (\r\n        <div style={{maxWidth: 200, margin: 10}}>\r\n            <h5>{product.name}</h5>\r\n            <img alt=\"alt\" src={product.images[0]?.url} style={{width: '100%'}}></img>\r\n            <h6>{product.description}</h6>\r\n        </div>\r\n    )\r\n}\r\n","import { ProductListItem } from \"./ProductListItem\";\r\nimport {\r\n    useQuery,\r\n    gql\r\n} from \"@apollo/client\";\r\n\r\nconst ALL_PRODUCTS = gql`\r\n    query getAllProducts {\r\n        allProducts {\r\n            id\r\n            name\r\n            description\r\n            images {\r\n                url\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ProductList = () => {\r\n\r\n    const { loading, error, data } = useQuery(ALL_PRODUCTS)\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error</p>\r\n  \r\n    return data.allProducts.map((product) => (\r\n        <ProductListItem key={product.id} product={product} />\r\n    ))\r\n}\r\n","import React from 'react';\r\nimport { ProductList } from \"../Product-Views/ProductList\";\r\nimport GridView from \"./VisualElements/GridView\";\r\n\r\nexport const MainPage = () => {\r\n\r\n    return(\r\n        <div>\r\n            <div >\r\n                <h1>Группы товаров:</h1>\r\n                <GridView/>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\r\n                <ProductList />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Collapsible, CollapsibleItem} from \"react-materialize\";\r\n\r\nconst PopoutContactElements = () => {\r\n    return (\r\n        <Collapsible\r\n            accordion\r\n            popout\r\n        >\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Telegram\"\r\n                node=\"div\"\r\n            >\r\n                Контакты Telegram\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Viber\"\r\n                node=\"div\"\r\n            >\r\n                Контакты Viber\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Номер телефона\"\r\n                node=\"div\"\r\n            >\r\n                тел. 000-000-00-00\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n                expanded={false}\r\n                header=\"Электронная почта\"\r\n                node=\"div\"\r\n            >\r\n                email feya_123456789@gmail.com\r\n            </CollapsibleItem>\r\n        </Collapsible>\r\n    );\r\n};\r\n\r\nexport default PopoutContactElements;\r\n","import React from 'react';\r\nimport PopoutContactElements from \"./PopoutContactElements\";\r\n\r\nexport const ContactsPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Contacts</h1>\r\n            <PopoutContactElements/>\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport {Footer} from \"react-materialize\"\r\n\r\nconst FooterComp = () => {\r\n    return (\r\n        <Footer\r\n            links={\r\n                <ul>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Instagram</a></li>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Facebook</a></li>\r\n                    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Google maps</a></li>\r\n                </ul>}\r\n        >\r\n            <h5 className=\"grey-text text-lighten-4\">\r\n                Ссылки на соц сети:\r\n            </h5>\r\n        </Footer>\r\n    );\r\n};\r\n\r\nexport default FooterComp;\r\n","import React from 'react';\r\n\r\nconst PageContainer = ({Page}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {Page}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContainer;\r\n","import './App.css';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {useRoutes} from \"./routes\";\r\n\r\nfunction App() {\r\n    const routes = useRoutes()\r\n    return (\r\n            <HashRouter>\r\n                <div>\r\n                    {routes}\r\n                </div>\r\n            </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {NavbarMenu} from \"./components/NavbarMenu\";\r\nimport {MainPage} from \"./components/Main/MainPage\";\r\nimport {ContactsPage} from \"./components/ContactsPage/ContactsPage\";\r\nimport FooterComp from \"./components/Footer-Component\";\r\nimport PageContainer from \"./components/PageContainer\";\r\nimport PagesList from \"./data/pagesList\";\r\n\r\nexport  const useRoutes = () => {\r\n    return(\r\n        <div>\r\n            <NavbarMenu/>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PageContainer Page={<MainPage/>}/>\r\n                </Route>\r\n                <Route path=\"/contacts\" exact>\r\n                    <PageContainer Page={<ContactsPage/>}/>\r\n                </Route>\r\n                {PagesList.map(p => {\r\n                        return (\r\n\r\n                                <Route key={p.route} path={p.route} exact>\r\n                                    <PageContainer Page={p.component}/>\r\n                                </Route>\r\n                        )\r\n                    }\r\n                )}\r\n                <Redirect to = \"/\"/>\r\n            </Switch>\r\n            <FooterComp/>\r\n        </div>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"materialize-css\"\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n} from \"@apollo/client\"\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://feya-bilyzna.herokuapp.com/api',\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}